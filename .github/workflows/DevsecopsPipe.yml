name: workflow
on:
    push:
        branches: [ main, develop, feat/*, fix/* ]
    pull_request:
        branches: [ main, develop, feat/*, fix/* ]

jobs:
  sast:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      security-events: write
      actions: read
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Important for SonarCloud analysis
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci

    - name: Debug token (first 10 chars)
      run: |
        echo "Secret exists: ${{ secrets.SONAR_TOKEN != '' }}"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Commit:  ${{ github.ref_name }}"
       
    
    - name: Show analysis completion
      run: |
        echo "SonarCloud SAST analysis completed!"
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Validando resultado de SonarCloud
      run: |
        projectKey="C11R11_laboratorio-final-devsecops"
        branchName="main"
    
        issueCount=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
          "https://sonarcloud.io/api/issues/search?componentKeys=${projectKey}&branch=${branchName}&types=VULNERABILITY&severities=BLOCKER,CRITICAL,MAJOR" \
          | jq '.total')

        echo "Vulnerabilidades críticas/altas/medias encontradas: $issueCount"

        if [ "$issueCount" -gt 0 ]; then
          echo "Se encontraron vulnerabilidades críticas, altas o medias. Deteniendo el pipeline..."
          exit 1
        else
          echo "No se encontraron vulnerabilidades críticas, altas ni medias. Continuando..."
        fi

  sca:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'laboratorio-final-devsecops'
          path: '.'
          format: 'ALL'
          out: 'reports'
          args: >
            --failOnCVSS 7
            --enableRetired

      - name: Upload dependency check report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-check-report
          path: reports/
          retention-days: 30
      - name: Result validation
        run: |
          report="reports/dependency-check-report.json"

          if [ ! -f "$report" ]; then
            echo "Report not found"
            exit 1
          fi

          critical=$(jq '[.dependencies[].vulnerabilities[]? | select(.severity == "high")] | length' "$report")
          high=$(jq '[.dependencies[].vulnerabilities[]? | select(.severity == "high")] | length' "$report")
          medium=$(jq '[.dependencies[].vulnerabilities[]? | select(.severity == "moderate")] | length' "$report")

          if [ "$critical" -gt 0 ] || [ "$high" -gt 0 ] || [ "$medium" -gt 0 ]; then
            echo "Vulnerabilities found. $critical critical, $high high, $medium medium"
            exit 1
          else
            echo "No vulnerabilities found"
          fi

          container-scan:
            runs-on: ubuntu-latest
            permissions:
              security-events: write
              actions: read
              contents: read
            steps:
              - name: Checkout code
                uses: actions/checkout@v4
        
              - name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3
        
              - name: Build Docker image
                run: |
                  docker build -t laboratorio-final-devsecops:latest .
        
              - name: Run Trivy vulnerability scanner
                uses: aquasecurity/trivy-action@master
                with:
                  image-ref: 'laboratorio-final-devsecops:latest'
                  format: 'sarif'
                  output: 'trivy-results.sarif'
                  severity: 'CRITICAL,HIGH,MEDIUM'
                  exit-code: '1'
        
              - name: Upload Trivy scan results to GitHub Security tab
                uses: github/codeql-action/upload-sarif@v3
                if: always()
                with:
                  sarif_file: 'trivy-results.sarif'
        
              - name: Upload Trivy scan results as artifact
                uses: actions/upload-artifact@v4
                if: always()
                with:
                  name: trivy-scan-results
                  path: trivy-results.sarif
                  retention-days: 30 

  container-scan:
    runs-on: ubuntu-latest
    permissions:
        security-events: write
        actions: read
        contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t laboratorio-final-devsecops:latest .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'laboratorio-final-devsecops:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '1'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Upload Trivy scan results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: trivy-scan-results
          path: trivy-results.sarif
          retention-days: 30 